// <auto-generated />
using System;
using EhBeats.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EhBeats.Migrations
{
    [DbContext(typeof(EhBeatsContext))]
    [Migration("20230727142240_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EhBeats.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "The",
                            LastName = "Beatles"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "The",
                            LastName = "Rolling Stones"
                        },
                        new
                        {
                            Id = 3,
                            LastName = "Aphex Twin"
                        });
                });

            modelBuilder.Entity("EhBeats.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A playlist I made",
                            Name = "My Playlist"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Another playlist I made",
                            Name = "My Other Playlist"
                        });
                });

            modelBuilder.Entity("EhBeats.Models.PlaylistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("SongId");

                    b.ToTable("PlaylistSong");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlaylistId = 1,
                            SongId = 1
                        },
                        new
                        {
                            Id = 2,
                            PlaylistId = 1,
                            SongId = 2
                        },
                        new
                        {
                            Id = 3,
                            PlaylistId = 1,
                            SongId = 3
                        });
                });

            modelBuilder.Entity("EhBeats.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<long?>("BPM")
                        .HasColumnType("bigint");

                    b.Property<int>("Danceability")
                        .HasColumnType("int");

                    b.Property<bool>("Explicit")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            BPM = 80L,
                            Danceability = 1,
                            Explicit = false,
                            ReleaseDate = new DateTime(1965, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Yesterday"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 1,
                            BPM = 80L,
                            Danceability = 1,
                            Explicit = false,
                            ReleaseDate = new DateTime(1968, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hey Jude"
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 2,
                            BPM = 130L,
                            Danceability = 3,
                            Explicit = false,
                            ReleaseDate = new DateTime(1965, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Satisfaction"
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 3,
                            BPM = 130L,
                            Danceability = 3,
                            Explicit = false,
                            ReleaseDate = new DateTime(1990, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Windowlicker"
                        });
                });

            modelBuilder.Entity("EhBeats.Models.PlaylistSong", b =>
                {
                    b.HasOne("EhBeats.Models.Playlist", "Playlist")
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EhBeats.Models.Song", "Song")
                        .WithMany("Playlists")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("EhBeats.Models.Song", b =>
                {
                    b.HasOne("EhBeats.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("EhBeats.Models.Artist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("EhBeats.Models.Playlist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("EhBeats.Models.Song", b =>
                {
                    b.Navigation("Playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
